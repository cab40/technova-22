{"ast":null,"code":"export{};/** Fired when the extension is first installed,\n *  when the extension is updated to a new version,\n *  and when Chrome is updated to a new version. */chrome.runtime.onInstalled.addListener(function(details){console.log('[background.js] onInstalled',details);alert('[background.js] onInstalled');});chrome.runtime.onConnect.addListener(function(port){console.log('[background.js] onConnect',port);alert('[background.js] onInstalled');});chrome.runtime.onStartup.addListener(function(){console.log('[background.js] onStartup');alert('[background.js] onInstalled');});/**\n *  Sent to the event page just before it is unloaded.\n *  This gives the extension opportunity to do some clean up.\n *  Note that since the page is unloading,\n *  any asynchronous operations started while handling this event\n *  are not guaranteed to complete.\n *  If more activity for the event page occurs before it gets\n *  unloaded the onSuspendCanceled event will\n *  be sent and the page won't be unloaded. */chrome.runtime.onSuspend.addListener(function(){console.log('[background.js] onSuspend');alert('[background.js] onSuspend');});","map":{"version":3,"sources":["/Users/catherineburns/Documents/technova-22/src/chrome/background.ts"],"names":["chrome","runtime","onInstalled","addListener","details","console","log","alert","onConnect","port","onStartup","onSuspend"],"mappings":"AAAA,SACA;AACA;AACA,mDACAA,MAAM,CAACC,OAAP,CAAeC,WAAf,CAA2BC,WAA3B,CAAuC,SAACC,OAAD,CAAa,CAChDC,OAAO,CAACC,GAAR,CAAY,6BAAZ,CAA2CF,OAA3C,EACAG,KAAK,CAAC,6BAAD,CAAL,CACH,CAHD,EAKAP,MAAM,CAACC,OAAP,CAAeO,SAAf,CAAyBL,WAAzB,CAAqC,SAACM,IAAD,CAAU,CAC3CJ,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCG,IAAzC,EACAF,KAAK,CAAC,6BAAD,CAAL,CACH,CAHD,EAKAP,MAAM,CAACC,OAAP,CAAeS,SAAf,CAAyBP,WAAzB,CAAqC,UAAM,CACvCE,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAC,KAAK,CAAC,6BAAD,CAAL,CACH,CAHD,EAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CACAP,MAAM,CAACC,OAAP,CAAeU,SAAf,CAAyBR,WAAzB,CAAqC,UAAM,CACvCE,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACAC,KAAK,CAAC,2BAAD,CAAL,CACH,CAHD","sourcesContent":["export {}\n/** Fired when the extension is first installed,\n *  when the extension is updated to a new version,\n *  and when Chrome is updated to a new version. */\nchrome.runtime.onInstalled.addListener((details) => {\n    console.log('[background.js] onInstalled', details);\n    alert('[background.js] onInstalled');\n});\n\nchrome.runtime.onConnect.addListener((port) => {\n    console.log('[background.js] onConnect', port)\n    alert('[background.js] onInstalled');\n});\n\nchrome.runtime.onStartup.addListener(() => {\n    console.log('[background.js] onStartup')\n    alert('[background.js] onInstalled');\n});\n\n/**\n *  Sent to the event page just before it is unloaded.\n *  This gives the extension opportunity to do some clean up.\n *  Note that since the page is unloading,\n *  any asynchronous operations started while handling this event\n *  are not guaranteed to complete.\n *  If more activity for the event page occurs before it gets\n *  unloaded the onSuspendCanceled event will\n *  be sent and the page won't be unloaded. */\nchrome.runtime.onSuspend.addListener(() => {\n    console.log('[background.js] onSuspend')\n    alert('[background.js] onSuspend');\n});\n"]},"metadata":{},"sourceType":"module"}