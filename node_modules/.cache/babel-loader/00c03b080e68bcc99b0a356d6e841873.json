{"ast":null,"code":"import{Sender}from\"../types\";var validateSender=function validateSender(message,sender){return sender.id===chrome.runtime.id&&message.from===Sender.React;};var messagesFromReactAppListener=function messagesFromReactAppListener(message,sender,response){var isValidated=validateSender(message,sender);if(isValidated&&message.message==='Hello from React'){response('Hello from content.js');}if(isValidated&&message.message===\"delete logo\"){var _logo$parentElement;var logo=document.getElementById('hplogo');logo===null||logo===void 0?void 0:(_logo$parentElement=logo.parentElement)===null||_logo$parentElement===void 0?void 0:_logo$parentElement.removeChild(logo);}};var main=function main(){console.log('[content.ts] Main');/**\n     * Fired when a message is sent from either an extension process or a content script.\n     */chrome.runtime.onMessage.addListener(messagesFromReactAppListener);};main();","map":{"version":3,"sources":["/Users/catherineburns/Documents/technova-22/src/chrome/content.ts"],"names":["Sender","validateSender","message","sender","id","chrome","runtime","from","React","messagesFromReactAppListener","response","isValidated","logo","document","getElementById","parentElement","removeChild","main","console","log","onMessage","addListener"],"mappings":"AAAA,OAAwBA,MAAxB,KAAsC,UAAtC,CAIA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CACnBC,OADmB,CAEnBC,MAFmB,CAGlB,CACD,MAAOA,CAAAA,MAAM,CAACC,EAAP,GAAcC,MAAM,CAACC,OAAP,CAAeF,EAA7B,EAAmCF,OAAO,CAACK,IAAR,GAAiBP,MAAM,CAACQ,KAAlE,CACH,CALD,CAOA,GAAMC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CACjCP,OADiC,CAEjCC,MAFiC,CAGjCO,QAHiC,CAIhC,CAED,GAAMC,CAAAA,WAAW,CAAGV,cAAc,CAACC,OAAD,CAAUC,MAAV,CAAlC,CAEA,GAAIQ,WAAW,EAAIT,OAAO,CAACA,OAAR,GAAoB,kBAAvC,CAA2D,CACvDQ,QAAQ,CAAC,uBAAD,CAAR,CACH,CAED,GAAIC,WAAW,EAAIT,OAAO,CAACA,OAAR,GAAoB,aAAvC,CAAsD,yBAClD,GAAMU,CAAAA,IAAI,CAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb,CACAF,IAAI,OAAJ,EAAAA,IAAI,SAAJ,6BAAAA,IAAI,CAAEG,aAAN,kEAAqBC,WAArB,CAAiCJ,IAAjC,EACH,CACJ,CAhBD,CAkBA,GAAMK,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACfC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACA;AACJ;AACA,OACId,MAAM,CAACC,OAAP,CAAec,SAAf,CAAyBC,WAAzB,CAAqCZ,4BAArC,EACH,CAND,CAQAQ,IAAI","sourcesContent":["import { ChromeMessage, Sender } from \"../types\";\n\ntype MessageResponse = (response?: any) => void\n\nconst validateSender = (\n    message: ChromeMessage,\n    sender: chrome.runtime.MessageSender\n) => {\n    return sender.id === chrome.runtime.id && message.from === Sender.React;\n}\n\nconst messagesFromReactAppListener = (\n    message: ChromeMessage,\n    sender: chrome.runtime.MessageSender,\n    response: MessageResponse\n) => {\n\n    const isValidated = validateSender(message, sender);\n\n    if (isValidated && message.message === 'Hello from React') {\n        response('Hello from content.js');\n    }\n\n    if (isValidated && message.message === \"delete logo\") {\n        const logo = document.getElementById('hplogo');\n        logo?.parentElement?.removeChild(logo)\n    }\n}\n\nconst main = () => {\n    console.log('[content.ts] Main')\n    /**\n     * Fired when a message is sent from either an extension process or a content script.\n     */\n    chrome.runtime.onMessage.addListener(messagesFromReactAppListener);\n}\n\nmain();\n\n\n"]},"metadata":{},"sourceType":"module"}